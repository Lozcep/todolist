{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\components\\\\Cards\\\\TaskCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nvar TaskCard = function TaskCard(props) {\n  _s();\n\n  var title = props.title,\n      body = props.body,\n      id = props.id,\n      setTasks = props.setTasks,\n      setFiltered = props.setFiltered,\n      tasks = props.tasks;\n\n  var _useState = useState(title),\n      queryTitle = _useState[0],\n      setQueryTitle = _useState[1];\n\n  var _useState2 = useState(body),\n      queryBody = _useState2[0],\n      setQueryBody = _useState2[1];\n\n  var _useState3 = useState(false),\n      edit = _useState3[0],\n      setEdit = _useState3[1];\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newTitle, newBody, id) {\n      var response, json, newArr;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(newTitle !== title || newBody !== body)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 3;\n              return fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id), {\n                method: 'PUT',\n                body: JSON.stringify({\n                  title: newTitle,\n                  body: newBody\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              json = _context.sent;\n              newArr = tasks;\n              newArr[id - 1] = json;\n              console.log(json);\n              setFiltered(newArr);\n              setTasks(newArr);\n              setEdit(false);\n              _context.next = 16;\n              break;\n\n            case 15:\n              console.log(\"no se ha hecho ninguna modificación\");\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleUpdate(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, !edit && __jsx(\"div\", {\n    className: \"taskCard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, body), __jsx(\"div\", {\n    className: \"taskCardButtonDiv\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setEdit(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"Editar\"), __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Eliminar\"))), edit && __jsx(\"div\", {\n    className: \"newTaskCard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    value: queryTitle,\n    className: \"newTaskTitle\",\n    placeholder: \"T\\xEDtulo\",\n    onChange: function onChange(e) {\n      setQueryTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    value: queryBody,\n    type: \"text\",\n    className: \"newTaskBody\",\n    placeholder: \"Descripci\\xF3n\",\n    onChange: function onChange(e) {\n      return setQueryBody(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return handleUpdate(title, body, queryTitle, queryBody, id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Actualizar\"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setEdit(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Cancelar\")));\n};\n\n_s(TaskCard, \"UjwzqiGRuP+iou22RQ8ardeSz4E=\");\n\n_c = TaskCard;\nexport default TaskCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/components/Cards/TaskCard.js"],"names":["React","useState","TaskCard","props","title","body","id","setTasks","setFiltered","tasks","queryTitle","setQueryTitle","queryBody","setQueryBody","edit","setEdit","handleUpdate","newTitle","newBody","fetch","method","JSON","stringify","headers","response","json","newArr","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    const { title , body, id, setTasks,setFiltered, tasks } = props\r\n\r\n    const [queryTitle, setQueryTitle] = useState(title)\r\n    const [queryBody, setQueryBody] = useState(body)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    const handleUpdate = async(newTitle, newBody, id) => {\r\n\r\n        if(newTitle !== title || newBody !== body ){\r\n\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                  title: newTitle,\r\n                  body: newBody\r\n                }),\r\n                headers: {\r\n                  'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n              })\r\n\r\n              const json = await response.json()\r\n\r\n              let newArr = tasks\r\n              newArr[id-1] = json\r\n            console.log(json)\r\n                setFiltered(newArr)\r\n                 setTasks(newArr)\r\n                setEdit(false)\r\n        \r\n        }else{\r\n            console.log(\"no se ha hecho ninguna modificación\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        {!edit && ( <div className=\"taskCard\">\r\n            <h2>{title}</h2>\r\n            <p>{body}</p>\r\n            <div className=\"taskCardButtonDiv\">\r\n                <button\r\n                onClick={() => setEdit(true) } >\r\n                    Editar\r\n                </button>\r\n                <button>\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n            </div>)}\r\n\r\n                { edit && ( <div className=\"newTaskCard\">\r\n                <input\r\n                value={queryTitle}\r\n                className=\"newTaskTitle\"\r\n                placeholder=\"Título\"\r\n                onChange={(e) => {\r\n                    setQueryTitle(e.target.value)\r\n                }}\r\n                ></input>\r\n                <input\r\n                value={queryBody}\r\n                type= \"text\"\r\n                className=\"newTaskBody\"\r\n                placeholder=\"Descripción\"\r\n                onChange={(e) => setQueryBody(e.target.value) }\r\n                ></input>\r\n                <button\r\n                onClick={() => handleUpdate(title, body, queryTitle, queryBody, id) }\r\n                    >Actualizar\r\n                </button>\r\n                <button\r\n                onClick={() =>  setEdit(false) }\r\n                    >Cancelar\r\n                </button>\r\n            </div>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskCard\r\n"]},"metadata":{},"sourceType":"module"}