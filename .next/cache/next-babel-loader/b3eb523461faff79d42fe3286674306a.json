{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport NewTaskCard from '../components/Cards/NewTaskCard';\nimport TaskCard from '../components/Cards/TaskCard';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { httpGet } from '../libs/http';\n\nvar index = function index(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var _useState2 = useState(data),\n      filtered = _useState2[0],\n      setFiltered = _useState2[1];\n\n  var _useState3 = useState(false),\n      newTask = _useState3[0],\n      setNewTask = _useState3[1];\n\n  var perFiltered = function perFiltered(searchParam) {\n    var tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(function (e) {\n        return e.title.toLowerCase().replace(/ /g, '').match(searchParam ? searchParam.toLowerCase().replace(/ /g, '').replace(/#/g, '') : '');\n      });\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  var handleSummit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title, body) {\n      var response, json, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('https://my-json-server.typicode.com/lozcep/infotest/posts', {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: title,\n                  body: body\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response.json();\n\n            case 6:\n              json = _context.sent;\n              console.log(json);\n              newData = tasks;\n              _context.next = 11;\n              return newData.push(json);\n\n            case 11:\n              console.log(newData);\n              setTasks(newData);\n              setFiltered(newData);\n              setNewTask(false);\n              _context.next = 20;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 17]]);\n    }));\n\n    return function handleSummit(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title, body, newTitle, newBody, id, setEdit) {\n      var response, json, newArr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(newTitle !== title || newBody !== body)) {\n                _context2.next = 21;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return window.fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id), {\n                method: 'PUT',\n                body: JSON.stringify({\n                  title: newTitle,\n                  body: newBody\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 4:\n              response = _context2.sent;\n              _context2.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context2.sent;\n              newArr = tasks;\n              newArr[id - 1] = json;\n              console.log(json);\n              setFiltered(newArr);\n              setTasks(newArr);\n              setEdit(false);\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 19:\n              _context2.next = 22;\n              break;\n\n            case 21:\n              console.log(\"no se ha hecho ninguna modificaci√≥n\");\n\n            case 22:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 16]]);\n    }));\n\n    return function handleUpdate(_x3, _x4, _x5, _x6, _x7, _x8) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    perFiltered: perFiltered,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setNewTask(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Nueva tarea\"), newTask && __jsx(\"button\", {\n    onClick: function onClick() {\n      return setNewTask(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }\n  }, \"Cancelar\"), newTask && __jsx(NewTaskCard, {\n    setNewTask: setNewTask,\n    handleSummit: handleSummit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 26\n    }\n  }), tasks && filtered.map(function (item, index) {\n    return __jsx(TaskCard, {\n      key: \"\".concat(item, \"-\").concat(index),\n      id: item.id,\n      title: item.title,\n      body: item.body,\n      handleUpdate: handleUpdate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 55\n      }\n    });\n  }));\n};\n\n_s(index, \"M1d2NaoH8yhYHT25Xd3SZXer2FA=\");\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/pages/index.js"],"names":["React","useEffect","useState","NewTaskCard","TaskCard","SearchBar","httpGet","index","data","tasks","setTasks","filtered","setFiltered","newTask","setNewTask","perFiltered","searchParam","tasksFiltered","length","filter","e","title","toLowerCase","replace","match","handleSummit","body","fetch","method","JSON","stringify","headers","response","json","console","log","newData","push","handleUpdate","newTitle","newBody","id","setEdit","window","newArr","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport NewTaskCard from '../components/Cards/NewTaskCard'\r\nimport TaskCard from '../components/Cards/TaskCard'\r\nimport SearchBar from '../components/SearchBar/SearchBar'\r\nimport { httpGet } from '../libs/http'\r\n\r\nconst index = ({data}) => {\r\n\r\n    const [tasks, setTasks] = useState(data)\r\n    const [filtered, setFiltered] = useState(data)\r\n    const [newTask, setNewTask] = useState(false)\r\n    \r\n\r\n    const perFiltered = (searchParam) => {\r\n        let tasksFiltered = tasks\r\n        if (searchParam.length == 0) {\r\n            setFiltered(tasks)\r\n        } else {\r\n\r\n            tasksFiltered = tasksFiltered.filter((e) =>\r\n                e.title.toLowerCase().replace(/ /g, '').match(\r\n                    searchParam ? (searchParam).toLowerCase().replace(/ /g, '').replace(/#/g, '') : ''\r\n                )\r\n            )                \r\n            setFiltered(tasksFiltered)            \r\n        }\r\n    }\r\n\r\n    const handleSummit = async (title, body) => {        \r\n        \r\n        try {\r\n            const response = await  fetch('https://my-json-server.typicode.com/lozcep/infotest/posts', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: title,\r\n                body: body,\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n        let json = await response.json()\r\n\r\n        console.log(json)\r\n\r\n        let newData = tasks\r\n\r\n        await  newData.push(json)\r\n        console.log(newData)\r\n\r\n        setTasks(newData)\r\n        setFiltered(newData)\r\n        setNewTask(false)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpdate = async(title, body, newTitle, newBody, id, setEdit) => {\r\n\r\n        if(newTitle !== title || newBody !== body ){\r\n\r\n\r\n                try {        \r\n                    \r\n                const response = await window.fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                    title: newTitle,\r\n                    body: newBody\r\n                    }),\r\n                    headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                    },\r\n                })\r\n\r\n              const json = await response.json()\r\n\r\n                let newArr = tasks\r\n                newArr[id-1] = json\r\n                console.log(json)\r\n                setFiltered(newArr)\r\n                setTasks(newArr)\r\n                setEdit(false)\r\n                } catch (error) {\r\n                    \r\n                    console.log(error)\r\n                }\r\n        \r\n        }else{\r\n            console.log(\"no se ha hecho ninguna modificaci√≥n\")\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Tareas</h1>\r\n            <SearchBar\r\n            perFiltered={perFiltered} />\r\n\r\n            <button\r\n            onClick={ () => setNewTask(true)   }>\r\n                Nueva tarea\r\n            </button>\r\n\r\n             { newTask && (<button\r\n            onClick={ () => setNewTask(false) }>\r\n                Cancelar\r\n            </button>)}\r\n\r\n            {newTask && (<NewTaskCard \r\n            setNewTask={setNewTask}\r\n            handleSummit= {handleSummit}\r\n            />) }\r\n\r\n            {tasks && filtered.map( (item, index) =>( <TaskCard \r\n            key={`${item}-${index}`}\r\n            id={item.id}\r\n            title= {item.title}\r\n            body= {item.body}\r\n            handleUpdate={handleUpdate}\r\n            />))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport async function getServerSideProps(context) {\r\n    const res = await fetch('https://my-json-server.typicode.com/lozcep/infotest/posts')\r\n    const data = await res.json()\r\n  \r\n    \r\n    if (!data) {\r\n        console.log(data)\r\n      return {\r\n        redirect: {\r\n          destination: '/',\r\n          permanent: false,\r\n        },\r\n      }\r\n    }\r\n    return {\r\n      props: {data},\r\n    }\r\n  }\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}