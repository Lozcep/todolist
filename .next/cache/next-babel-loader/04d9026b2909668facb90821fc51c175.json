{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\components\\\\Cards\\\\TaskCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst TaskCard = props => {\n  const {\n    title,\n    body,\n    id,\n    handleUpdate,\n    handleDelete,\n    handleCheck,\n    index,\n    status\n  } = props;\n  const {\n    0: queryTitle,\n    1: setQueryTitle\n  } = useState(title);\n  const {\n    0: queryBody,\n    1: setQueryBody\n  } = useState(body);\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  const {\n    0: check,\n    1: setCheck\n  } = useState(status);\n  return __jsx(React.Fragment, null, !edit && __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 25\n    }\n  }, __jsx(\"h2\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 29\n    }\n  }, title), __jsx(\"input\", {\n    className: \"form-check-input\",\n    type: \"checkbox\",\n    checked: check,\n    onChange: e => {\n      handleCheck(index, e.target.checked);\n      setCheck(e.target.checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  })), __jsx(\"p\", {\n    className: \"card-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, body)), __jsx(\"div\", {\n    className: \"task-card-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }, \"Editar\"), __jsx(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => handleDelete(id, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"Eliminar\"))), edit && __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    value: queryTitle,\n    className: \"form-control form-control-lg\",\n    placeholder: \"T\\xEDtulo\",\n    onChange: e => {\n      setQueryTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    value: queryBody,\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Descripci\\xF3n\",\n    onChange: e => setQueryBody(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"task-card-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => handleUpdate(title, body, queryTitle, queryBody, id, index, setEdit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Actualizar\"), __jsx(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => setEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Cancelar\"))));\n};\n\nexport default TaskCard;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/components/Cards/TaskCard.js"],"names":["React","useState","TaskCard","props","title","body","id","handleUpdate","handleDelete","handleCheck","index","status","queryTitle","setQueryTitle","queryBody","setQueryBody","edit","setEdit","check","setCheck","e","target","checked","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    const { title , body, id, handleUpdate, handleDelete, handleCheck, index, status} = props\r\n\r\n    const [queryTitle, setQueryTitle] = useState(title)\r\n    const [queryBody, setQueryBody] = useState(body)\r\n    const [edit, setEdit] = useState(false)\r\n    const [check, setCheck] = useState(status)\r\n\r\n    return (\r\n        <>\r\n\r\n        {!edit && ( <div className=\"card\">\r\n                    <div>\r\n                        <div>\r\n                            <h2 className=\"card-header\">{title}</h2>\r\n                            <input\r\n                            className=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            checked= {check}\r\n                            onChange= { (e) => {handleCheck(index, e.target.checked)\r\n                                setCheck(e.target.checked)\r\n                            }} />\r\n                             </div>\r\n                            <p className=\"card-text\">{body}</p>\r\n                       \r\n                      \r\n                    </div>\r\n                    <div className=\"task-card-button\">\r\n                        <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => setEdit(true) } >\r\n                            Editar\r\n                        </button>\r\n\r\n                        <button\r\n                        className=\"btn btn-danger\"\r\n                        onClick= {() => handleDelete(id, index) } >\r\n                            Eliminar\r\n                        </button>\r\n                    </div>\r\n                     </div>)}\r\n\r\n                { edit && ( <div className=\"card\">\r\n                <input\r\n                value={queryTitle}\r\n                className=\"form-control form-control-lg\"\r\n                placeholder=\"Título\"\r\n                onChange={(e) => {\r\n                    setQueryTitle(e.target.value)\r\n                }}\r\n                ></input>\r\n                <input\r\n                value={queryBody}\r\n                type= \"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Descripción\"\r\n                onChange={(e) => setQueryBody(e.target.value) }\r\n                ></input>\r\n                <div className=\"task-card-button\">\r\n                <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => handleUpdate(title, body, queryTitle, queryBody, id, index, setEdit) }\r\n                >Actualizar\r\n                </button>\r\n                <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() =>  setEdit(false) }\r\n                >Cancelar\r\n                </button>\r\n                </div>\r\n            </div>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskCard\r\n"]},"metadata":{},"sourceType":"module"}