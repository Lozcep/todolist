{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\components\\\\Cards\\\\TaskCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst TaskCard = props => {\n  const {\n    title,\n    body\n  } = props;\n  const {\n    0: queryTitle,\n    1: setQueryTitle\n  } = useState(title);\n  const {\n    0: queryBody,\n    1: setQueryBody\n  } = useState(body);\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n  return __jsx(React.Fragment, null, !edit && __jsx(\"div\", {\n    className: \"taskCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, body), __jsx(\"div\", {\n    className: \"taskCardButtonDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Editar\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Eliminar\"))), edit && __jsx(\"div\", {\n    className: \"newTaskCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    value: queryTitle,\n    className: \"newTaskTitle\",\n    placeholder: \"T\\xEDtulo\",\n    onChange: e => {\n      setQueryTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    value: queryBody,\n    type: \"text\",\n    className: \"newTaskBody\",\n    placeholder: \"Descripci\\xF3n\",\n    onChange: e => {\n      setQueryBody(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Actualizar\"), __jsx(\"button\", {\n    onClick: () => setEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Cancelar\")));\n};\n\nexport default TaskCard;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/components/Cards/TaskCard.js"],"names":["React","useState","TaskCard","props","title","body","queryTitle","setQueryTitle","queryBody","setQueryBody","edit","setEdit","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM;AAAEC,IAAAA,KAAF;AAAUC,IAAAA;AAAV,MAAmBF,KAAzB;AAEA,QAAM;AAAA,OAACG,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAACG,KAAD,CAA5C;AACA,QAAM;AAAA,OAACI,SAAD;AAAA,OAAYC;AAAZ,MAA4BR,QAAQ,CAACI,IAAD,CAA1C;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,KAAD,CAAhC;AAEA,SACI,4BAEC,CAACS,IAAD,IAAW;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,KAAL,CADQ,EAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFQ,EAGR;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,IAAD,CADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAHQ,CAFZ,EAgBUD,IAAI,IAAM;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACZ;AACA,IAAA,KAAK,EAAEJ,UADP;AAEA,IAAA,SAAS,EAAC,cAFV;AAGA,IAAA,WAAW,EAAC,WAHZ;AAIA,IAAA,QAAQ,EAAGM,CAAD,IAAO;AACbL,MAAAA,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,KAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,EASZ;AACA,IAAA,KAAK,EAAEN,SADP;AAEA,IAAA,IAAI,EAAE,MAFN;AAGA,IAAA,SAAS,EAAC,aAHV;AAIA,IAAA,WAAW,EAAC,gBAJZ;AAKA,IAAA,QAAQ,EAAGI,CAAD,IAAO;AACbH,MAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,KAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATY,EAkBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBY,EAqBZ;AACA,IAAA,OAAO,EAAE,MAAOH,OAAO,CAAC,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBArBY,CAhBpB,CADJ;AA8CH,CAtDD;;AAwDA,eAAeT,QAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    const { title , body } = props\r\n\r\n    const [queryTitle, setQueryTitle] = useState(title)\r\n    const [queryBody, setQueryBody] = useState(body)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    return (\r\n        <>\r\n\r\n        {!edit && ( <div className=\"taskCard\">\r\n            <h2>{title}</h2>\r\n            <p>{body}</p>\r\n            <div className=\"taskCardButtonDiv\">\r\n                <button\r\n                onClick={() => setEdit(true) } >\r\n                    Editar\r\n                </button>\r\n                <button>\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n            </div>)}\r\n\r\n                { edit && ( <div className=\"newTaskCard\">\r\n                <input\r\n                value={queryTitle}\r\n                className=\"newTaskTitle\"\r\n                placeholder=\"Título\"\r\n                onChange={(e) => {\r\n                    setQueryTitle(e.target.value)\r\n                }}\r\n                ></input>\r\n                <input\r\n                value={queryBody}\r\n                type= \"text\"\r\n                className=\"newTaskBody\"\r\n                placeholder=\"Descripción\"\r\n                onChange={(e) => {\r\n                    setQueryBody(e.target.value)\r\n                } }\r\n                ></input>\r\n                <button\r\n                    >Actualizar\r\n                </button>\r\n                <button\r\n                onClick={() =>  setEdit(false) }\r\n                    >Cancelar\r\n                </button>\r\n            </div>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskCard\r\n"]},"metadata":{},"sourceType":"module"}