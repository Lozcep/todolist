{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\components\\\\Cards\\\\TaskCard.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nconst TaskCard = props => {\n  const {\n    title,\n    body,\n    id,\n    setTasks,\n    setFiltered,\n    tasks\n  } = props;\n  const {\n    0: queryTitle,\n    1: setQueryTitle\n  } = useState(title);\n  const {\n    0: queryBody,\n    1: setQueryBody\n  } = useState(body);\n  const {\n    0: edit,\n    1: setEdit\n  } = useState(false);\n\n  const handleUpdate = async (newTitle, newBody, id) => {\n    if (newTitle !== title || newBody !== body) {\n      const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          title: newTitle,\n          body: newBody\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      const json = await response.json();\n      console.log(json);\n      setFiltered;\n      setTasks;\n      setEdit(false);\n    } else {\n      console.log(\"no se ha hecho ninguna modificación\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, !edit && __jsx(\"div\", {\n    className: \"taskCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, body), __jsx(\"div\", {\n    className: \"taskCardButtonDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    onClick: () => setEdit(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Editar\"), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"Eliminar\"))), edit && __jsx(\"div\", {\n    className: \"newTaskCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, __jsx(\"input\", {\n    value: queryTitle,\n    className: \"newTaskTitle\",\n    placeholder: \"T\\xEDtulo\",\n    onChange: e => {\n      setQueryTitle(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    value: queryBody,\n    type: \"text\",\n    className: \"newTaskBody\",\n    placeholder: \"Descripci\\xF3n\",\n    onChange: e => setQueryBody(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    onClick: () => handleUpdate(queryTitle, queryBody, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"Actualizar\"), __jsx(\"button\", {\n    onClick: () => setEdit(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Cancelar\")));\n};\n\nexport default TaskCard;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/components/Cards/TaskCard.js"],"names":["React","useState","TaskCard","props","title","body","id","setTasks","setFiltered","tasks","queryTitle","setQueryTitle","queryBody","setQueryBody","edit","setEdit","handleUpdate","newTitle","newBody","response","fetch","method","JSON","stringify","headers","json","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst TaskCard = (props) => {\r\n\r\n    const { title , body, id, setTasks,setFiltered, tasks } = props\r\n\r\n    const [queryTitle, setQueryTitle] = useState(title)\r\n    const [queryBody, setQueryBody] = useState(body)\r\n    const [edit, setEdit] = useState(false)\r\n\r\n    const handleUpdate = async(newTitle, newBody, id) => {\r\n\r\n        if(newTitle !== title || newBody !== body ){\r\n\r\n            const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                  title: newTitle,\r\n                  body: newBody\r\n                }),\r\n                headers: {\r\n                  'Content-type': 'application/json; charset=UTF-8',\r\n                },\r\n              })\r\n\r\n              const json = await response.json()\r\n\r\n            console.log(json)\r\n              setFiltered\r\n              setTasks\r\n            setEdit(false)\r\n        \r\n        }else{\r\n            console.log(\"no se ha hecho ninguna modificación\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        {!edit && ( <div className=\"taskCard\">\r\n            <h2>{title}</h2>\r\n            <p>{body}</p>\r\n            <div className=\"taskCardButtonDiv\">\r\n                <button\r\n                onClick={() => setEdit(true) } >\r\n                    Editar\r\n                </button>\r\n                <button>\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n            </div>)}\r\n\r\n                { edit && ( <div className=\"newTaskCard\">\r\n                <input\r\n                value={queryTitle}\r\n                className=\"newTaskTitle\"\r\n                placeholder=\"Título\"\r\n                onChange={(e) => {\r\n                    setQueryTitle(e.target.value)\r\n                }}\r\n                ></input>\r\n                <input\r\n                value={queryBody}\r\n                type= \"text\"\r\n                className=\"newTaskBody\"\r\n                placeholder=\"Descripción\"\r\n                onChange={(e) => setQueryBody(e.target.value) }\r\n                ></input>\r\n                <button\r\n                onClick={() => handleUpdate(queryTitle, queryBody, id) }\r\n                    >Actualizar\r\n                </button>\r\n                <button\r\n                onClick={() =>  setEdit(false) }\r\n                    >Cancelar\r\n                </button>\r\n            </div>)}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskCard\r\n"]},"metadata":{},"sourceType":"module"}