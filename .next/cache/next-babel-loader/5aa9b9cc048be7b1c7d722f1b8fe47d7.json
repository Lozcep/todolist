{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\nimport TaskCard from '../components/Cards/TaskCard';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport { httpGet } from '../libs/http';\n\nconst index = ({\n  data\n}) => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState(data[0]);\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState(data[0]);\n\n  const perFiltered = searchParam => {\n    let empresasFiltradas = filteredcompanies;\n\n    if (searchParam.length == 0) {\n      var _companies;\n\n      setPerPage((_companies = companies) === null || _companies === void 0 ? void 0 : _companies.data.slice(0, 12));\n      setCompanies(_objectSpread(_objectSpread({}, companies), {}, {\n        pageCount: Math.ceil(companies.data.length / 12)\n      }));\n    } else {\n      empresasFiltradas = empresasFiltradas.filter(e => e.name.toLowerCase().replace(/ /g, '').match(searchParam ? searchParam.toLowerCase().replace(/ /g, '').replace(/#/g, '') : ''));\n      setPerPage(empresasFiltradas.slice(0, 12));\n      setCompanies(_objectSpread(_objectSpread({}, companies), {}, {\n        pageCount: Math.ceil(empresasFiltradas.length / 12)\n      }));\n    }\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), tasks && data.map((item, index) => __jsx(TaskCard, {\n    key: `${item}-${index}`,\n    title: item.title,\n    body: item.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 51\n    }\n  })), console.log(data));\n};\n\nexport async function getServerSideProps(context) {\n  const res = await fetch('https://my-json-server.typicode.com/lozcep/infotest/posts');\n  const data = await res.json();\n\n  if (!data) {\n    console.log(data);\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      data\n    } // will be passed to the page component as props\n\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/pages/index.js"],"names":["React","useEffect","useState","TaskCard","SearchBar","httpGet","index","data","tasks","setTasks","filtered","setFiltered","perFiltered","searchParam","empresasFiltradas","filteredcompanies","length","setPerPage","companies","slice","setCompanies","pageCount","Math","ceil","filter","e","name","toLowerCase","replace","match","map","item","title","body","console","log","getServerSideProps","context","res","fetch","json","redirect","destination","permanent","props"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport TaskCard from '../components/Cards/TaskCard'\r\nimport SearchBar from '../components/SearchBar/SearchBar'\r\nimport { httpGet } from '../libs/http'\r\n\r\nconst index = ({data}) => {\r\n\r\n    const [tasks, setTasks] = useState(data[0])\r\n    const [filtered, setFiltered] = useState(data[0])\r\n\r\n    const perFiltered = (searchParam) => {\r\n        let empresasFiltradas = filteredcompanies\r\n        if (searchParam.length == 0) {\r\n            setPerPage(companies?.data.slice(0, 12))\r\n            setCompanies({\r\n                ...companies,\r\n                pageCount: Math.ceil(companies.data.length / 12)\r\n            })\r\n        } else {\r\n\r\n            empresasFiltradas = empresasFiltradas.filter((e) =>\r\n                e.name.toLowerCase().replace(/ /g, '').match(\r\n                    searchParam ? (searchParam).toLowerCase().replace(/ /g, '').replace(/#/g, '') : ''\r\n                )\r\n            )\r\n\r\n            setPerPage(empresasFiltradas.slice(0, 12))\r\n            setCompanies({\r\n                ...companies,\r\n                pageCount: Math.ceil(empresasFiltradas.length / 12)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Lista de Tareas</h1>\r\n            <SearchBar />\r\n            {tasks && data.map( (item, index) =>( <TaskCard \r\n            key={`${item}-${index}`}\r\n            title= {item.title}\r\n            body= {item.body}\r\n            />))\r\n            \r\n            }\r\n            {console.log(data)}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport async function getServerSideProps(context) {\r\n    const res = await fetch('https://my-json-server.typicode.com/lozcep/infotest/posts')\r\n    const data = await res.json()\r\n  \r\n    \r\n    if (!data) {\r\n        console.log(data)\r\n      return {\r\n        redirect: {\r\n          destination: '/',\r\n          permanent: false,\r\n        },\r\n      }\r\n    }\r\n    return {\r\n      props: {data}, // will be passed to the page component as props\r\n    }\r\n  }\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}