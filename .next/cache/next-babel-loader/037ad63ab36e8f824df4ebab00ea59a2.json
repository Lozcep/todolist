{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport NewTaskCard from '../components/Cards/NewTaskCard';\nimport TaskCard from '../components/Cards/TaskCard';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport Spinner from '../components/Spinner/Spinner';\nvar NEXT_PUBLIC_API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nvar index = function index(_ref) {\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var _useState2 = useState(data),\n      filtered = _useState2[0],\n      setFiltered = _useState2[1];\n\n  var _useState3 = useState(false),\n      newTask = _useState3[0],\n      setNewTask = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var perFiltered = function perFiltered(searchParam) {\n    var tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(function (e) {\n        return e.title.toLowerCase().replace(/ /g, '').match(searchParam ? searchParam.toLowerCase().replace(/ /g, '').replace(/#/g, '') : '');\n      });\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  var handleSummit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title) {\n      var response, json, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL), {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: title,\n                  status: false\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context.sent;\n              console.log(json);\n              newData = tasks;\n              _context.next = 12;\n              return newData.push(json);\n\n            case 12:\n              console.log(newData);\n              setTasks(newData);\n              setFiltered(newData);\n              setNewTask(false);\n              setLoading(false);\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 19]]);\n    }));\n\n    return function handleSummit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title, newTitle, id, index, setEdit) {\n      var response, json, newArr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(newTitle !== title)) {\n                _context2.next = 24;\n                break;\n              }\n\n              setLoading(true);\n              _context2.prev = 2;\n              id < 6 ? id = id : id = 1;\n              _context2.next = 6;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: 'PUT',\n                body: JSON.stringify({\n                  title: newTitle\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n\n            case 9:\n              json = _context2.sent;\n              newArr = tasks;\n              newArr[index] = json;\n              setTasks(newArr);\n              setFiltered(newArr);\n              setLoading(false);\n              setEdit(false);\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              setLoading(false);\n\n            case 22:\n              _context2.next = 25;\n              break;\n\n            case 24:\n              console.log(\"no se ha hecho ninguna modificaciÃ³n\");\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 18]]);\n    }));\n\n    return function handleUpdate(_x2, _x3, _x4, _x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, index) {\n      var newArr;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.prev = 1;\n              id < 6 ? id = id : id = 1;\n              _context3.next = 5;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: 'DELETE'\n              });\n\n            case 5:\n              newArr = tasks;\n              newArr.splice(index, 1);\n              setTasks(newArr);\n              setFiltered(newArr);\n              setLoading(false);\n              console.log(newArr);\n              _context3.next = 17;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 13]]);\n    }));\n\n    return function handleDelete(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleCheck = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(index, status) {\n      var newArr;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              newArr = tasks;\n              newArr[index].status = status;\n              setTasks(newArr);\n              setFiltered(newArr);\n              console.log(newArr[index].status);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleCheck(_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"card p-3\"\n  }, __jsx(\"h1\", {\n    className: \"d-flex justify-content-center\"\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    perFiltered: perFiltered\n  }), __jsx(\"div\", {\n    className: \"btn-group mb-3\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return setNewTask(true);\n    }\n  }, \"Nueva tarea\"), __jsx(\"button\", {\n    className: \"btn btn-info\",\n    onClick: function onClick() {\n      setFiltered(tasks);\n    }\n  }, \"Todas\"), __jsx(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        if (arr.status == false) return true;\n      });\n      setFiltered(arr);\n    }\n  }, \"Pendientes\"), __jsx(\"button\", {\n    className: \"btn btn-success\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        if (arr.status == true) return true;\n      });\n      setFiltered(arr);\n    }\n  }, \"Realizadas\")), newTask && __jsx(NewTaskCard, _defineProperty({\n    setNewTask: setNewTask,\n    handleSummit: handleSummit\n  }, \"setNewTask\", setNewTask)), loading && __jsx(Spinner, null), filtered.map(function (item, index) {\n    return __jsx(TaskCard, {\n      key: \"\".concat(item, \"-\").concat(index),\n      index: index,\n      id: item.id,\n      title: item.title,\n      status: item.status,\n      handleUpdate: handleUpdate,\n      handleDelete: handleDelete,\n      handleCheck: handleCheck\n    });\n  }));\n};\n\nexport var __N_SSP = true;\nexport default index;","map":null,"metadata":{},"sourceType":"module"}