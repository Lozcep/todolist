{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Hostienda PC\\\\Documents\\\\ToDoApp\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport NewTaskCard from \"../components/Cards/NewTaskCard\";\nimport TaskCard from \"../components/Cards/TaskCard\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport { Button } from \"@chakra-ui/react\";\nvar NEXT_PUBLIC_API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nvar index = function index(_ref) {\n  _s();\n\n  var _jsx;\n\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var _useState2 = useState(data),\n      filtered = _useState2[0],\n      setFiltered = _useState2[1];\n\n  var _useState3 = useState(false),\n      newTask = _useState3[0],\n      setNewTask = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var perFiltered = function perFiltered(searchParam) {\n    var tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(function (e) {\n        return e.title.toLowerCase().replace(/ /g, \"\").match(searchParam ? searchParam.toLowerCase().replace(/ /g, \"\").replace(/#/g, \"\") : \"\");\n      });\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  var handleSummit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title) {\n      var response, json, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL), {\n                method: \"POST\",\n                body: JSON.stringify({\n                  title: title,\n                  status: false\n                }),\n                headers: {\n                  \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context.sent;\n              newData = tasks;\n              _context.next = 11;\n              return newData.push(json);\n\n            case 11:\n              setTasks(newData);\n              setFiltered(newData);\n              setNewTask(false);\n              setLoading(false);\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setLoading(false);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 17]]);\n    }));\n\n    return function handleSummit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title, newTitle, id, index, setEdit) {\n      var response, json, newArr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(newTitle !== title)) {\n                _context2.next = 24;\n                break;\n              }\n\n              setLoading(true);\n              _context2.prev = 2;\n              id < 6 ? id = id : id = 1;\n              _context2.next = 6;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: \"PUT\",\n                body: JSON.stringify({\n                  title: newTitle\n                }),\n                headers: {\n                  \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n              });\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n\n            case 9:\n              json = _context2.sent;\n              newArr = tasks;\n              newArr[index] = json;\n              setTasks(newArr);\n              setFiltered(newArr);\n              setLoading(false);\n              setEdit(false);\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              setLoading(false);\n\n            case 22:\n              _context2.next = 25;\n              break;\n\n            case 24:\n              console.log(\"no se ha hecho ninguna modificaciÃ³n\");\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 18]]);\n    }));\n\n    return function handleUpdate(_x2, _x3, _x4, _x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, index) {\n      var newArr;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.prev = 1;\n              id < 6 ? id = id : id = 1;\n              _context3.next = 5;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: \"DELETE\"\n              });\n\n            case 5:\n              newArr = tasks;\n              newArr.splice(index, 1);\n              setTasks(_toConsumableArray(newArr));\n              setFiltered(_toConsumableArray(newArr));\n              setLoading(false);\n              _context3.next = 16;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n              setLoading(false);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 12]]);\n    }));\n\n    return function handleDelete(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"card p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    perFiltered: perFiltered,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"btn-group mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return setNewTask(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Nueva tarea\"), __jsx(\"button\", {\n    className: \"btn btn-info\",\n    onClick: function onClick() {\n      return setFiltered(tasks);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, \"Todas\"), __jsx(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        return arr.status === false;\n      });\n      setFiltered(arr);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Pendientes\"), __jsx(\"button\", {\n    className: \"btn btn-success\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        return arr.status === true;\n      });\n      setFiltered(arr);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Realizadas\")), newTask && __jsx(NewTaskCard, (_jsx = {\n    setNewTask: setNewTask,\n    handleSummit: handleSummit\n  }, _defineProperty(_jsx, \"setNewTask\", setNewTask), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 9\n  }), _jsx)), loading && __jsx(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }), filtered && filtered.map(function (item, index) {\n    return __jsx(TaskCard, {\n      key: \"\".concat(item, \"-\").concat(index),\n      index: index,\n      id: item.id,\n      title: item.title,\n      status: item.status,\n      setFiltered: setFiltered,\n      setTasks: setTasks,\n      tasks: tasks,\n      handleUpdate: handleUpdate,\n      handleDelete: handleDelete,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\n_s(index, \"gmrXPduEcevKeTCBZbG7tlXCrOo=\");\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/Hostienda PC/Documents/ToDoApp/pages/index.js"],"names":["React","useState","NewTaskCard","TaskCard","SearchBar","Spinner","Button","NEXT_PUBLIC_API_URL","process","env","index","data","tasks","setTasks","filtered","setFiltered","newTask","setNewTask","loading","setLoading","perFiltered","searchParam","tasksFiltered","length","filter","e","title","toLowerCase","replace","match","handleSummit","fetch","method","body","JSON","stringify","status","headers","response","json","newData","push","console","log","handleUpdate","newTitle","id","setEdit","newArr","handleDelete","splice","arr","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport NewTaskCard from \"../components/Cards/NewTaskCard\";\r\nimport TaskCard from \"../components/Cards/TaskCard\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport { Button } from \"@chakra-ui/react\"\r\n\r\nconst { NEXT_PUBLIC_API_URL } = process.env;\r\n\r\nconst index = ({ data }) => {\r\n  const [tasks, setTasks] = useState(data);\r\n  const [filtered, setFiltered] = useState(data);\r\n  const [newTask, setNewTask] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const perFiltered = (searchParam) => {\r\n    let tasksFiltered = tasks;\r\n    if (searchParam.length == 0) {\r\n      setFiltered(tasks);\r\n    } else {\r\n      tasksFiltered = tasksFiltered.filter((e) =>\r\n        e.title\r\n          .toLowerCase()\r\n          .replace(/ /g, \"\")\r\n          .match(\r\n            searchParam\r\n              ? searchParam.toLowerCase().replace(/ /g, \"\").replace(/#/g, \"\")\r\n              : \"\"\r\n          )\r\n      );\r\n      setFiltered(tasksFiltered);\r\n    }\r\n  };\r\n\r\n  const handleSummit = async (title) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${NEXT_PUBLIC_API_URL}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title: title,\r\n          status: false,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      });\r\n      let json = await response.json();\r\n      let newData = tasks;\r\n\r\n      await newData.push(json);\r\n\r\n      setTasks(newData);\r\n      setFiltered(newData);\r\n      setNewTask(false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (title, newTitle, id, index, setEdit) => {\r\n    if (newTitle !== title) {\r\n      setLoading(true);\r\n      try {\r\n        id < 6 ? (id = id) : (id = 1);\r\n\r\n        const response = await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            title: newTitle,\r\n          }),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        });\r\n\r\n        const json = await response.json();\r\n        let newArr = tasks;\r\n        newArr[index] = json;\r\n\r\n        setTasks(newArr);\r\n        setFiltered(newArr);\r\n        setLoading(false);\r\n        setEdit(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      console.log(\"no se ha hecho ninguna modificaciÃ³n\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id, index) => {\r\n    setLoading(true);\r\n    try {\r\n      id < 6 ? (id = id) : (id = 1);\r\n\r\n      await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      let newArr = tasks;\r\n      newArr.splice(index, 1);\r\n\r\n      setTasks([...newArr]);\r\n      setFiltered([...newArr]);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card p-3\">\r\n      <h1 className=\"d-flex justify-content-center\">Lista de Tareas</h1>\r\n      <SearchBar perFiltered={perFiltered} />\r\n\r\n      <div className=\"btn-group mb-3\">\r\n        <button className=\"btn btn-primary\" onClick={() => setNewTask(true)}>\r\n          Nueva tarea\r\n        </button>\r\n\r\n        <button className=\"btn btn-info\" onClick={() => setFiltered(tasks)}>\r\n          Todas\r\n        </button>\r\n        <button\r\n          className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const arr = tasks.filter((arr) => arr.status === false);\r\n            setFiltered(arr);\r\n          }}\r\n        >\r\n          Pendientes\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            const arr = tasks.filter((arr) => arr.status === true);\r\n            setFiltered(arr);\r\n          }}\r\n        >\r\n          Realizadas\r\n        </button>\r\n      </div>\r\n      {newTask && (\r\n        <NewTaskCard\r\n          setNewTask={setNewTask}\r\n          handleSummit={handleSummit}\r\n          setNewTask={setNewTask}\r\n        />\r\n      )}\r\n\r\n      {loading && <Spinner />}\r\n\r\n      {filtered &&\r\n        filtered.map((item, index) => (\r\n          <TaskCard\r\n            key={`${item}-${index}`}\r\n            index={index}\r\n            id={item.id}\r\n            title={item.title}\r\n            status={item.status}\r\n            setFiltered={setFiltered}\r\n            setTasks={setTasks}\r\n            tasks={tasks}\r\n            handleUpdate={handleUpdate}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  const res = await fetch(`${NEXT_PUBLIC_API_URL}`);\r\n  const data = await res.json();\r\n\r\n  if (!data) {\r\n    console.log(data);\r\n    return {\r\n      redirect: {\r\n        destination: \"/\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n  return {\r\n    props: { data },\r\n  };\r\n}\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}