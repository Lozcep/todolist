{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Oriana\\\\Documents\\\\Daniel\\\\infocasas\\\\infocasas-frontend-challenge\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport NewTaskCard from '../components/Cards/NewTaskCard';\nimport TaskCard from '../components/Cards/TaskCard';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport Spinner from '../components/Spinner/Spinner';\nvar NEXT_PUBLIC_API_URL = process.env.NEXT_PUBLIC_API_URL;\n\nvar index = function index(_ref) {\n  _s();\n\n  var _jsx;\n\n  var data = _ref.data;\n\n  var _useState = useState(data),\n      tasks = _useState[0],\n      setTasks = _useState[1];\n\n  var _useState2 = useState(data),\n      filtered = _useState2[0],\n      setFiltered = _useState2[1];\n\n  var _useState3 = useState(false),\n      newTask = _useState3[0],\n      setNewTask = _useState3[1];\n\n  var _useState4 = useState(false),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  console.log(NEXT_PUBLIC_API_URL);\n\n  var perFiltered = function perFiltered(searchParam) {\n    var tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(function (e) {\n        return e.title.toLowerCase().replace(/ /g, '').match(searchParam ? searchParam.toLowerCase().replace(/ /g, '').replace(/#/g, '') : '');\n      });\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  var handleSummit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(title) {\n      var response, json, newData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL), {\n                method: 'POST',\n                body: JSON.stringify({\n                  title: title,\n                  status: false\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 4:\n              response = _context.sent;\n              _context.next = 7;\n              return response.json();\n\n            case 7:\n              json = _context.sent;\n              console.log(json);\n              newData = tasks;\n              _context.next = 12;\n              return newData.push(json);\n\n            case 12:\n              console.log(newData);\n              setTasks(newData);\n              setFiltered(newData);\n              setNewTask(false);\n              setLoading(false);\n              _context.next = 23;\n              break;\n\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n              setLoading(false);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 19]]);\n    }));\n\n    return function handleSummit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title, newTitle, id, index, setEdit) {\n      var response, json, newArr;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(newTitle !== title)) {\n                _context2.next = 24;\n                break;\n              }\n\n              setLoading(true);\n              _context2.prev = 2;\n              id < 6 ? id = id : id = 1;\n              _context2.next = 6;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: 'PUT',\n                body: JSON.stringify({\n                  title: newTitle\n                }),\n                headers: {\n                  'Content-type': 'application/json; charset=UTF-8'\n                }\n              });\n\n            case 6:\n              response = _context2.sent;\n              _context2.next = 9;\n              return response.json();\n\n            case 9:\n              json = _context2.sent;\n              newArr = tasks;\n              newArr[index] = json;\n              setTasks(newArr);\n              setFiltered(newArr);\n              setLoading(false);\n              setEdit(false);\n              _context2.next = 22;\n              break;\n\n            case 18:\n              _context2.prev = 18;\n              _context2.t0 = _context2[\"catch\"](2);\n              console.log(_context2.t0);\n              setLoading(false);\n\n            case 22:\n              _context2.next = 25;\n              break;\n\n            case 24:\n              console.log(\"no se ha hecho ninguna modificaciÃ³n\");\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 18]]);\n    }));\n\n    return function handleUpdate(_x2, _x3, _x4, _x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id, index) {\n      var newArr;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setLoading(true);\n              _context3.prev = 1;\n              id < 6 ? id = id : id = 1;\n              _context3.next = 5;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/\").concat(id), {\n                method: 'DELETE'\n              });\n\n            case 5:\n              newArr = tasks;\n              newArr.splice(index, 1);\n              setTasks(newArr);\n              setFiltered(newArr);\n              setLoading(false);\n              console.log(newArr);\n              _context3.next = 17;\n              break;\n\n            case 13:\n              _context3.prev = 13;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n              setLoading(false);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 13]]);\n    }));\n\n    return function handleDelete(_x7, _x8) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleCheck = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(index, status) {\n      var newArr;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              newArr = tasks;\n              newArr[index].status = status;\n              setTasks(newArr);\n              setFiltered(newArr);\n              console.log(newArr);\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function handleCheck(_x9, _x10) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"card p-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: \"d-flex justify-content-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    perFiltered: perFiltered,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"btn-group mb-3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: function onClick() {\n      return setNewTask(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, \"Nueva tarea\"), __jsx(\"button\", {\n    className: \"btn btn-info\",\n    onClick: function onClick() {\n      setFiltered(tasks);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"Todas\"), __jsx(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        if (arr.status == false) return true;\n      });\n      console.log(arr);\n      setFiltered(arr);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Pendientes\"), __jsx(\"button\", {\n    className: \"btn btn-success\",\n    onClick: function onClick() {\n      var arr = tasks.filter(function (arr) {\n        if (arr.status == true) return true;\n      });\n      console.log(arr);\n      setFiltered(arr);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Realizadas\")), newTask && __jsx(NewTaskCard, (_jsx = {\n    setNewTask: setNewTask,\n    handleSummit: handleSummit\n  }, _defineProperty(_jsx, \"setNewTask\", setNewTask), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 27\n  }), _jsx)), loading && __jsx(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 27\n    }\n  }), filtered && filtered.map(function (item, index) {\n    return __jsx(TaskCard, {\n      key: \"\".concat(item, \"-\").concat(index),\n      index: index,\n      id: item.id,\n      title: item.title,\n      status: item.status,\n      handleUpdate: handleUpdate,\n      handleDelete: handleDelete,\n      handleCheck: handleCheck,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 59\n      }\n    });\n  }));\n};\n\n_s(index, \"gmrXPduEcevKeTCBZbG7tlXCrOo=\");\n\nexport var __N_SSP = true;\nexport default index;","map":{"version":3,"sources":["C:/Users/Oriana/Documents/Daniel/infocasas/infocasas-frontend-challenge/pages/index.js"],"names":["React","useEffect","useState","NewTaskCard","TaskCard","SearchBar","Spinner","NEXT_PUBLIC_API_URL","process","env","index","data","tasks","setTasks","filtered","setFiltered","newTask","setNewTask","loading","setLoading","console","log","perFiltered","searchParam","tasksFiltered","length","filter","e","title","toLowerCase","replace","match","handleSummit","fetch","method","body","JSON","stringify","status","headers","response","json","newData","push","handleUpdate","newTitle","id","setEdit","newArr","handleDelete","splice","handleCheck","arr","map","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport NewTaskCard from '../components/Cards/NewTaskCard'\r\nimport TaskCard from '../components/Cards/TaskCard'\r\nimport SearchBar from '../components/SearchBar/SearchBar'\r\nimport Spinner from '../components/Spinner/Spinner'\r\n\r\nconst { NEXT_PUBLIC_API_URL } = process.env\r\n \r\nconst index = ({data}) => {\r\n\r\n    const [tasks, setTasks] = useState(data)\r\n    const [filtered, setFiltered] = useState(data)\r\n    const [newTask, setNewTask] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    console.log(NEXT_PUBLIC_API_URL)\r\n\r\n    const perFiltered = (searchParam) => {\r\n        let tasksFiltered = tasks\r\n        if (searchParam.length == 0) {\r\n            setFiltered(tasks)\r\n        } else {\r\n\r\n            tasksFiltered = tasksFiltered.filter((e) =>\r\n                e.title.toLowerCase().replace(/ /g, '').match(\r\n                    searchParam ? (searchParam).toLowerCase().replace(/ /g, '').replace(/#/g, '') : ''\r\n                )\r\n            )                \r\n            setFiltered(tasksFiltered)            \r\n        }\r\n    }\r\n\r\n    const handleSummit = async (title) => {        \r\n        setLoading(true)\r\n        try {\r\n            const response = await  fetch(`${NEXT_PUBLIC_API_URL}`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                title: title,\r\n                status: false\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n        let json = await response.json()\r\n\r\n        console.log(json)\r\n\r\n        let newData = tasks\r\n\r\n        await  newData.push(json)\r\n        console.log(newData)\r\n\r\n        setTasks(newData)\r\n        setFiltered(newData)\r\n        setNewTask(false)\r\n        setLoading(false)\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpdate = async(title, newTitle, id, index, setEdit) => {\r\n\r\n        if(newTitle !== title ){\r\n                 setLoading(true)\r\n                try {        \r\n                 \r\n                    id < 6 ? id = id   : id = 1\r\n                    \r\n                const response = await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n                    method: 'PUT',\r\n                    body: JSON.stringify({\r\n                    title: newTitle,\r\n                    }),\r\n                    headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                    },\r\n                })\r\n\r\n                const json = await response.json()\r\n                let newArr = tasks\r\n                newArr[index] = json\r\n\r\n                setTasks(newArr)\r\n                setFiltered(newArr)            \r\n                setLoading(false)\r\n                setEdit(false)\r\n                } catch (error) {\r\n                    \r\n                    console.log(error)\r\n                    setLoading(false)\r\n                }\r\n        \r\n        }else{\r\n            console.log(\"no se ha hecho ninguna modificaciÃ³n\")\r\n        }\r\n    }\r\n\r\n    const handleDelete = async(id, index) => {\r\n        setLoading(true)\r\n        try {\r\n\r\n            id < 6 ? id = id   : id = 1\r\n            \r\n           await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n                method: 'DELETE',\r\n              });\r\n\r\n                let newArr = tasks \r\n                newArr.splice( index ,1)  \r\n\r\n                setTasks(newArr)    \r\n                setFiltered(newArr) \r\n                setLoading(false)\r\n                console.log(newArr)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleCheck = async (index, status) => {\r\n\r\n              \r\n                let newArr = tasks \r\n                newArr[index].status = status\r\n\r\n                setTasks(newArr)    \r\n                setFiltered(newArr) \r\n              console.log(newArr)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card p-3\">\r\n            <h1 className=\"d-flex justify-content-center\">Lista de Tareas</h1>\r\n            <SearchBar\r\n            perFiltered={perFiltered} />\r\n\r\n            <div className=\"btn-group mb-3\">\r\n\r\n            <button\r\n            className=\"btn btn-primary\"\r\n            onClick={ () => setNewTask(true)   }>\r\n                Nueva tarea\r\n            </button>\r\n\r\n            <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => {\r\n                setFiltered(tasks)\r\n            }}\r\n            >Todas</button>\r\n            <button\r\n            className=\"btn btn-warning\"\r\n            onClick={ () => {\r\n                const arr = tasks.filter( (arr) => {\r\n                    if (arr.status == false) return true \r\n                })\r\n                console.log(arr)\r\n                setFiltered(arr)\r\n            } }>Pendientes</button>\r\n\r\n            <button\r\n            className=\"btn btn-success\"\r\n            onClick={ () => {\r\n                const arr = tasks.filter( (arr) => {\r\n                    if (arr.status == true) return true \r\n                })\r\n                console.log(arr)\r\n                setFiltered(arr)\r\n            } }>Realizadas</button>\r\n\r\n            </div>\r\n            {newTask  && (<NewTaskCard            \r\n            setNewTask={setNewTask}\r\n            handleSummit= {handleSummit}\r\n            setNewTask={setNewTask}\r\n            />) }\r\n\r\n            { loading && (<Spinner />)}\r\n\r\n            {filtered  && filtered.map( (item, index) =>( <TaskCard \r\n            key={`${item}-${index}`}\r\n            index={index}\r\n            id={item.id}\r\n            title= {item.title}\r\n            status= {item.status}\r\n            handleUpdate={handleUpdate}\r\n            handleDelete={handleDelete}\r\n            handleCheck={handleCheck}\r\n            />))}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport async function getServerSideProps(context) {\r\n    const res = await fetch(`${NEXT_PUBLIC_API_URL}`)\r\n    const data = await res.json()\r\n  \r\n    \r\n    if (!data) {\r\n        console.log(data)\r\n      return {\r\n        redirect: {\r\n          destination: '/',\r\n          permanent: false,\r\n        },\r\n      }\r\n    }\r\n    return {\r\n      props: {data},\r\n    }\r\n  }\r\n\r\nexport default index\r\n"]},"metadata":{},"sourceType":"module"}