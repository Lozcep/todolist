{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hostienda PC\\\\Documents\\\\ToDoApp\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport NewTaskCard from \"../components/Cards/NewTaskCard\";\nimport TaskCard from \"../components/Cards/TaskCard\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\nconst {\n  NEXT_PUBLIC_API_URL\n} = process.env;\n\nconst index = ({\n  data\n}) => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState(data);\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState(data);\n  const {\n    0: newTask,\n    1: setNewTask\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const perFiltered = searchParam => {\n    let tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(e => e.title.toLowerCase().replace(/ /g, \"\").match(searchParam ? searchParam.toLowerCase().replace(/ /g, \"\").replace(/#/g, \"\") : \"\"));\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  const handleSummit = async title => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${NEXT_PUBLIC_API_URL}`, {\n        method: \"POST\",\n        body: JSON.stringify({\n          title: title,\n          status: false\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      let json = await response.json();\n      let newData = tasks;\n      await newData.push(json);\n      setTasks(newData);\n      setFiltered(newData);\n      setNewTask(false);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleUpdate = async (title, newTitle, id, index, setEdit) => {\n    if (newTitle !== title) {\n      setLoading(true);\n\n      try {\n        id < 6 ? id = id : id = 1;\n        const response = await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\n          method: \"PUT\",\n          body: JSON.stringify({\n            title: newTitle\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        });\n        const json = await response.json();\n        let newArr = tasks;\n        newArr[index] = json;\n        setTasks(newArr);\n        setFiltered(newArr);\n        setLoading(false);\n        setEdit(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    } else {\n      console.log(\"no se ha hecho ninguna modificaciÃ³n\");\n    }\n  };\n\n  const handleDelete = async (id, index) => {\n    setLoading(true);\n\n    try {\n      id < 6 ? id = id : id = 1;\n      await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\n        method: \"DELETE\"\n      });\n      let newArr = tasks;\n      newArr.splice(index, 1);\n      setTasks([...newArr]);\n      setFiltered([...newArr]);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  return __jsx(Box, {\n    background: \"white\",\n    height: \"100%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Lista de tareas\"), __jsx(Flex, {\n    padding: \"55px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    perFiltered: perFiltered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    className: \"btn-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"btn btn-info\",\n    onClick: () => setFiltered(tasks),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Todas\"), __jsx(Button, {\n    className: \"btn btn-warning\",\n    onClick: () => {\n      const arr = tasks.filter(arr => arr.status === false);\n      setFiltered(arr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Pendientes\"), __jsx(Button, {\n    className: \"btn btn-success\",\n    onClick: () => {\n      const arr = tasks.filter(arr => arr.status === true);\n      setFiltered(arr);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, \"Realizadas\")), newTask && __jsx(NewTaskCard, {\n    setNewTask: setNewTask,\n    handleSummit: handleSummit,\n    setNewTask: setNewTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }), loading && __jsx(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }), filtered && filtered.map((item, index) => __jsx(TaskCard, {\n    key: `${item}-${index}`,\n    index: index,\n    id: item.id,\n    title: item.title,\n    status: item.status,\n    setFiltered: setFiltered,\n    setTasks: setTasks,\n    tasks: tasks,\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  })), __jsx(Button, {\n    onClick: () => setNewTask(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, \"Nueva tarea\"));\n};\n\nexport async function getServerSideProps(context) {\n  const res = await fetch(`${NEXT_PUBLIC_API_URL}`);\n  const data = await res.json();\n\n  if (!data) {\n    console.log(data);\n    return {\n      redirect: {\n        destination: \"/\",\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default index;","map":{"version":3,"sources":["C:/Users/Hostienda PC/Documents/ToDoApp/pages/index.js"],"names":["React","useState","NewTaskCard","TaskCard","SearchBar","Spinner","Box","Button","Flex","NEXT_PUBLIC_API_URL","process","env","index","data","tasks","setTasks","filtered","setFiltered","newTask","setNewTask","loading","setLoading","perFiltered","searchParam","tasksFiltered","length","filter","e","title","toLowerCase","replace","match","handleSummit","response","fetch","method","body","JSON","stringify","status","headers","json","newData","push","error","console","log","handleUpdate","newTitle","id","setEdit","newArr","handleDelete","splice","arr","map","item","getServerSideProps","context","res","redirect","destination","permanent","props"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport NewTaskCard from \"../components/Cards/NewTaskCard\";\r\nimport TaskCard from \"../components/Cards/TaskCard\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\nimport { Box, Button, Flex } from \"@chakra-ui/react\";\r\n\r\nconst { NEXT_PUBLIC_API_URL } = process.env;\r\n\r\nconst index = ({ data }) => {\r\n  const [tasks, setTasks] = useState(data);\r\n  const [filtered, setFiltered] = useState(data);\r\n  const [newTask, setNewTask] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const perFiltered = (searchParam) => {\r\n    let tasksFiltered = tasks;\r\n    if (searchParam.length == 0) {\r\n      setFiltered(tasks);\r\n    } else {\r\n      tasksFiltered = tasksFiltered.filter((e) =>\r\n        e.title\r\n          .toLowerCase()\r\n          .replace(/ /g, \"\")\r\n          .match(\r\n            searchParam\r\n              ? searchParam.toLowerCase().replace(/ /g, \"\").replace(/#/g, \"\")\r\n              : \"\"\r\n          )\r\n      );\r\n      setFiltered(tasksFiltered);\r\n    }\r\n  };\r\n\r\n  const handleSummit = async (title) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${NEXT_PUBLIC_API_URL}`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          title: title,\r\n          status: false,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json; charset=UTF-8\",\r\n        },\r\n      });\r\n      let json = await response.json();\r\n      let newData = tasks;\r\n\r\n      await newData.push(json);\r\n\r\n      setTasks(newData);\r\n      setFiltered(newData);\r\n      setNewTask(false);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (title, newTitle, id, index, setEdit) => {\r\n    if (newTitle !== title) {\r\n      setLoading(true);\r\n      try {\r\n        id < 6 ? (id = id) : (id = 1);\r\n\r\n        const response = await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            title: newTitle,\r\n          }),\r\n          headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\",\r\n          },\r\n        });\r\n\r\n        const json = await response.json();\r\n        let newArr = tasks;\r\n        newArr[index] = json;\r\n\r\n        setTasks(newArr);\r\n        setFiltered(newArr);\r\n        setLoading(false);\r\n        setEdit(false);\r\n      } catch (error) {\r\n        console.log(error);\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      console.log(\"no se ha hecho ninguna modificaciÃ³n\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id, index) => {\r\n    setLoading(true);\r\n    try {\r\n      id < 6 ? (id = id) : (id = 1);\r\n\r\n      await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n\r\n      let newArr = tasks;\r\n      newArr.splice(index, 1);\r\n\r\n      setTasks([...newArr]);\r\n      setFiltered([...newArr]);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box background=\"white\" height=\"100%\">\r\n      <h1>Lista de tareas</h1>\r\n      <Flex padding={\"55px\"}>\r\n      <SearchBar perFiltered={perFiltered} />\r\n      </Flex>\r\n      \r\n\r\n      <div className=\"btn-group mb-3\">\r\n        <Button className=\"btn btn-info\" onClick={() => setFiltered(tasks)}>\r\n          Todas\r\n        </Button>\r\n        <Button\r\n          className=\"btn btn-warning\"\r\n          onClick={() => {\r\n            const arr = tasks.filter((arr) => arr.status === false);\r\n            setFiltered(arr);\r\n          }}\r\n        >\r\n          Pendientes\r\n        </Button>\r\n\r\n        <Button\r\n          className=\"btn btn-success\"\r\n          onClick={() => {\r\n            const arr = tasks.filter((arr) => arr.status === true);\r\n            setFiltered(arr);\r\n          }}\r\n        >\r\n          Realizadas\r\n        </Button>\r\n      </div>\r\n      {newTask && (\r\n        <NewTaskCard\r\n          setNewTask={setNewTask}\r\n          handleSummit={handleSummit}\r\n          setNewTask={setNewTask}\r\n        />\r\n      )}\r\n\r\n      {loading && <Spinner />}\r\n\r\n      {filtered &&\r\n        filtered.map((item, index) => (\r\n          <TaskCard\r\n            key={`${item}-${index}`}\r\n            index={index}\r\n            id={item.id}\r\n            title={item.title}\r\n            status={item.status}\r\n            setFiltered={setFiltered}\r\n            setTasks={setTasks}\r\n            tasks={tasks}\r\n            handleUpdate={handleUpdate}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n\r\n      <Button onClick={() => setNewTask(true)}>Nueva tarea</Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  const res = await fetch(`${NEXT_PUBLIC_API_URL}`);\r\n  const data = await res.json();\r\n\r\n  if (!data) {\r\n    console.log(data);\r\n    return {\r\n      redirect: {\r\n        destination: \"/\",\r\n        permanent: false,\r\n      },\r\n    };\r\n  }\r\n  return {\r\n    props: { data },\r\n  };\r\n}\r\n\r\nexport default index;\r\n"]},"metadata":{},"sourceType":"module"}