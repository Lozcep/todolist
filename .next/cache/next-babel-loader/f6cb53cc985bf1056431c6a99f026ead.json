{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport NewTaskCard from '../components/Cards/NewTaskCard';\nimport TaskCard from '../components/Cards/TaskCard';\nimport SearchBar from '../components/SearchBar/SearchBar';\nimport Spinner from '../components/Spinner/Spinner';\nconst {\n  NEXT_PUBLIC_API_URL\n} = process.env;\n\nconst index = ({\n  data\n}) => {\n  const {\n    0: tasks,\n    1: setTasks\n  } = useState(data);\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState(data);\n  const {\n    0: newTask,\n    1: setNewTask\n  } = useState(false);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n\n  const perFiltered = searchParam => {\n    let tasksFiltered = tasks;\n\n    if (searchParam.length == 0) {\n      setFiltered(tasks);\n    } else {\n      tasksFiltered = tasksFiltered.filter(e => e.title.toLowerCase().replace(/ /g, '').match(searchParam ? searchParam.toLowerCase().replace(/ /g, '').replace(/#/g, '') : ''));\n      setFiltered(tasksFiltered);\n    }\n  };\n\n  const handleSummit = async title => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(`${NEXT_PUBLIC_API_URL}`, {\n        method: 'POST',\n        body: JSON.stringify({\n          title: title,\n          status: false\n        }),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n      let json = await response.json();\n      console.log(json);\n      let newData = tasks;\n      await newData.push(json);\n      console.log(newData);\n      setTasks(newData);\n      setFiltered(newData);\n      setNewTask(false);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleUpdate = async (title, newTitle, id, index, setEdit) => {\n    if (newTitle !== title) {\n      setLoading(true);\n\n      try {\n        id < 6 ? id = id : id = 1;\n        const response = await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\n          method: 'PUT',\n          body: JSON.stringify({\n            title: newTitle\n          }),\n          headers: {\n            'Content-type': 'application/json; charset=UTF-8'\n          }\n        });\n        const json = await response.json();\n        let newArr = tasks;\n        newArr[index] = json;\n        setTasks(newArr);\n        setFiltered(newArr);\n        setLoading(false);\n        setEdit(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    } else {\n      console.log(\"no se ha hecho ninguna modificaciÃ³n\");\n    }\n  };\n\n  const handleDelete = async (id, index) => {\n    setLoading(true);\n\n    try {\n      id < 6 ? id = id : id = 1;\n      await fetch(`${NEXT_PUBLIC_API_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      let newArr = tasks;\n      newArr.splice(index, 1);\n      setTasks(newArr);\n      setFiltered(newArr);\n      setLoading(false);\n      console.log(newArr);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n\n  const handleCheck = async (index, status) => {\n    let newArr = tasks;\n    newArr[index].status = status;\n    setTasks(newArr);\n    setFiltered(newArr);\n    console.log(newArr[index].status);\n  };\n\n  return __jsx(\"div\", {\n    className: \"card p-3\"\n  }, __jsx(\"h1\", {\n    className: \"d-flex justify-content-center\"\n  }, \"Lista de Tareas\"), __jsx(SearchBar, {\n    perFiltered: perFiltered\n  }), __jsx(\"div\", {\n    className: \"btn-group mb-3\"\n  }, __jsx(\"button\", {\n    className: \"btn btn-primary\",\n    onClick: () => setNewTask(true)\n  }, \"Nueva tarea\"), __jsx(\"button\", {\n    className: \"btn btn-info\",\n    onClick: () => {\n      setFiltered(tasks);\n    }\n  }, \"Todas\"), __jsx(\"button\", {\n    className: \"btn btn-warning\",\n    onClick: () => {\n      const arr = tasks.filter(arr => {\n        if (arr.status == false) return true;\n      });\n      setFiltered(arr);\n    }\n  }, \"Pendientes\"), __jsx(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => {\n      const arr = tasks.filter(arr => {\n        if (arr.status == true) return true;\n      });\n      setFiltered(arr);\n    }\n  }, \"Realizadas\")), newTask && __jsx(NewTaskCard, {\n    setNewTask: setNewTask,\n    handleSummit: handleSummit,\n    setNewTask: setNewTask\n  }), loading && __jsx(Spinner, null), filtered.map((item, index) => __jsx(TaskCard, {\n    key: `${item}-${index}`,\n    index: index,\n    id: item.id,\n    title: item.title,\n    status: item.status,\n    handleUpdate: handleUpdate,\n    handleDelete: handleDelete,\n    handleCheck: handleCheck\n  })));\n};\n\nexport async function getServerSideProps(context) {\n  const res = await fetch(`${NEXT_PUBLIC_API_URL}`);\n  const data = await res.json();\n\n  if (!data) {\n    console.log(data);\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false\n      }\n    };\n  }\n\n  return {\n    props: {\n      data\n    }\n  };\n}\nexport default index;","map":null,"metadata":{},"sourceType":"module"}