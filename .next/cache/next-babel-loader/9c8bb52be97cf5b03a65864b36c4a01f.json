{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Hostienda PC\\\\Documents\\\\ToDoApp\\\\components\\\\Cards\\\\TaskCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Flex, Checkbox } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { MdCreate, MdDelete, MdDone, MdClose } from \"react-icons/md\";\n\nvar TaskCard = function TaskCard(props) {\n  _s();\n\n  var title = props.title,\n      id = props.id,\n      handleUpdate = props.handleUpdate,\n      handleDelete = props.handleDelete,\n      index = props.index,\n      status = props.status,\n      setTasks = props.setTasks,\n      setFiltered = props.setFiltered;\n\n  var _useState = useState(title),\n      queryTitle = _useState[0],\n      setQueryTitle = _useState[1];\n\n  var _useState2 = useState(false),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var newArr = function newArr(state, index, status) {\n    var arr = state;\n    arr[index].status = !status;\n    return _toConsumableArray(arr);\n  };\n\n  var handleCheck = function handleCheck() {\n    setFiltered(function (filtered) {\n      return newArr(filtered, index, status);\n    });\n    setTasks(function (tasks) {\n      return newArr(tasks, index, status);\n    });\n  };\n\n  return __jsx(React.Fragment, null, !edit && __jsx(Flex, {\n    margin: \"10px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Checkbox, {\n    colorScheme: \"green\",\n    checked: status,\n    onChange: handleCheck,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), __jsx(\"h5\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, title), __jsx(MdCreate, {\n    size: \"25px\",\n    color: \"#6C6C6C\",\n    onClick: function onClick() {\n      return setEdit(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), __jsx(MdDelete, {\n    size: \"25px\",\n    color: \"#6C6C6C\",\n    onClick: function onClick() {\n      return handleDelete(id, index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), edit && __jsx(Flex, {\n    margin: \"10px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    color: \"Black\",\n    defaultValue: title,\n    className: \"form-control form-control-lg\",\n    onChange: function onChange(e) {\n      setQueryTitle(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), __jsx(MdDone, {\n    size: \"25px\",\n    color: \"#6C6C6C\",\n    onClick: function onClick() {\n      return handleUpdate(title, queryTitle, id, index, setEdit);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), __jsx(MdClose, {\n    size: \"25px\",\n    color: \"#6C6C6C\",\n    onClick: function onClick() {\n      return setEdit(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  })));\n};\n\n_s(TaskCard, \"F9sRmK//wQT9uR6O78uTlW3GXBU=\");\n\n_c = TaskCard;\nexport default TaskCard;\n/* \r\n<input\r\ntype=\"checkbox\"\r\nchecked={status}\r\nonChange={handleCheck}\r\n/>\r\n */\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"sources":["C:/Users/Hostienda PC/Documents/ToDoApp/components/Cards/TaskCard.js"],"names":["Flex","Checkbox","React","useState","MdCreate","MdDelete","MdDone","MdClose","TaskCard","props","title","id","handleUpdate","handleDelete","index","status","setTasks","setFiltered","queryTitle","setQueryTitle","edit","setEdit","newArr","state","arr","handleCheck","filtered","tasks","e","target","value"],"mappings":"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","sourcesContent":["import { Flex, Checkbox } from \"@chakra-ui/react\";\r\nimport React, { useState } from \"react\";\r\nimport { MdCreate, MdDelete, MdDone, MdClose } from \"react-icons/md\";\r\n\r\nconst TaskCard = (props) => {\r\n  const {\r\n    title,\r\n    id,\r\n    handleUpdate,\r\n    handleDelete,\r\n    index,\r\n    status,\r\n    setTasks,\r\n    setFiltered,\r\n  } = props;\r\n\r\n  const [queryTitle, setQueryTitle] = useState(title);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const newArr = (state, index, status) => {\r\n    let arr = state;\r\n    arr[index].status = !status;\r\n    return [...arr];\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    setFiltered((filtered) => newArr(filtered, index, status));\r\n    setTasks((tasks) => newArr(tasks, index, status));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!edit && (\r\n        <Flex margin=\"10px\">\r\n          <Checkbox\r\n          colorScheme=\"green\"\r\n            \r\n            checked={status}\r\n            onChange={handleCheck}\r\n          />\r\n          <h5>{title}</h5>\r\n          <MdCreate size=\"25px\" color=\"#6C6C6C\" onClick={() => setEdit(true)} />\r\n          <MdDelete\r\n            size=\"25px\"\r\n            color=\"#6C6C6C\"\r\n            onClick={() => handleDelete(id, index)}\r\n          />\r\n        </Flex>\r\n      )}\r\n\r\n      {edit && (\r\n        <Flex margin=\"10px\">\r\n          <input\r\n          color=\"Black\"\r\n            defaultValue={title}\r\n            className=\"form-control form-control-lg\"\r\n            onChange={(e) => {\r\n              setQueryTitle(e.target.value);\r\n            }}\r\n          />\r\n        \r\n            <MdDone\r\n              size=\"25px\"\r\n              color=\"#6C6C6C\"\r\n              onClick={() =>\r\n                handleUpdate(title, queryTitle, id, index, setEdit)\r\n              }\r\n            />\r\n            <MdClose\r\n              size=\"25px\"\r\n              color=\"#6C6C6C\"\r\n              onClick={() => setEdit(false)}\r\n            />\r\n         \r\n        </Flex>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n\r\n/* \r\n<input\r\ntype=\"checkbox\"\r\nchecked={status}\r\nonChange={handleCheck}\r\n/>\r\n */"]},"metadata":{},"sourceType":"module"}